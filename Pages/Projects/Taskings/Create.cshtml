@page
@model TaskManager.Pages.Projects.Taskings.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Tasking</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tasking.ProjectID" class="control-label"></label>
                <input asp-for="Tasking.ProjectID" class ="form-control" value=@ViewBag.ProjectID readonly></input>
            </div>
            <div class="form-group">
                <label asp-for="Tasking.Description" class="control-label"></label>
                <input asp-for="Tasking.Description" class="form-control" />
                <span asp-validation-for="Tasking.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select asp-for="Tasking.Severity">
                    <option value="0">Low</option>
                    <option value="1">Medium</option>
                    <option value="2">High</option>
                </select>
            </div>
            <div class="form-group">
                <select asp-for="Tasking.Progression">
                    <option value="0">Created</option>
                    <option value="1">In Progress</option>
                    <option value="2">Completed</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
</form>
    </div>
</div>

<div>
    <a asp-page="/Projects/Details" asp-route-id=@ViewBag.ProjectID>Back to Project Page</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
