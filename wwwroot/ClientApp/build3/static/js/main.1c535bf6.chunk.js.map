{"version":3,"sources":["../node_modules/typescript/lib sync","components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","actions/api.js","actions/Food.js","reducers/Food.js","actions/DayTotal.js","reducers/DayTotal.js","reducers/index.js","actions/store.js","components/useForm.js","components/FoodForm.js","components/FoodChart.js","components/Foods.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","className","light","tag","Link","to","onClick","isOpen","navbar","Component","displayName","name","Layout","children","Home","href","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","fetch","response","json","data","aria-labelledby","map","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","baseUrl","url","fetchAll","num","axios","get","fetchById","create","newRecord","post","update","updateRecord","put","delete","fetchDate","ACTION_TYPES","formatData","servings","parseInt","fats","carbs","protein","initialState","list","dispatch","api","then","console","log","type","payload","catch","err","iniitalState","reducers","combineReducers","Food","action","x","foodID","filter","DayTotal","store","createStore","compose","applyMiddleware","thunk","useForm","initialFieldValues","validate","setCurrentId","useState","values","setValues","errors","setErrors","handleInputChange","target","value","fieldValue","resetForm","mapActionToProps","createFood","onSuccess","res","updateFood","actions2","connect","FoodList","withStyles","theme","root","margin","spacing","minWidth","formControl","smMargin","classes","addToast","useToasts","buttonWait","fieldValues","temp","Object","every","result","useEffect","currentId","find","autoComplete","noValidate","onSubmit","preventDefault","appearance","setTimeout","Grid","container","item","TextField","variant","label","onChange","error","helperText","Button","arr","arr2","arr3","dates","test","unshift","totalFats","totalCarbs","test2","totalProtein","test3","datef","labels","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","options","title","display","text","fontSize","legend","position","boo","usaTime","Date","toLocaleString","timeZone","year","getFullYear","month","getMonth","day","getDate","theDayf","theDay","toDateString","fetchAllFoods","deleteFood","paper","padding","Paper","elevation","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","record","index","hover","ButtonGroup","color","window","confirm","App","autoDismiss","Container","maxWidth","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","BrowserRouter","basename","Route","path","component"],"mappings":"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","file":"static/js/main.1c535bf6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 264;","import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">FoodCrud2</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/counter\">Counter</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello, world!</h1>\r\n        <p>Welcome to your new single-page application, built with:</p>\r\n        <ul>\r\n          <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n          <li><a href='https://facebook.github.io/react/'>React</a> for client-side code</li>\r\n          <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n        </ul>\r\n        <p>To help you get started, we have also set up:</p>\r\n        <ul>\r\n          <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n          <li><strong>Development server integration</strong>. In development mode, the development server from <code>create-react-app</code> runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n          <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration produces minified, efficiently bundled JavaScript files.</li>\r\n        </ul>\r\n        <p>The <code>ClientApp</code> subdirectory is a standard React application based on the <code>create-react-app</code> template. If you open a command prompt in that directory, you can run <code>npm</code> commands such as <code>npm test</code> or <code>npm install</code>.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\n//const baseUrl = \"https://localhost:44323/api/\"\r\nconst baseUrl = \"https://mrcoolisimo.azurewebsites.net/api/\"\r\n\r\n\r\nexport default {\r\n    Food(url = baseUrl + 'foods/'){\r\n        return {\r\n            fetchAll : num => axios.get(url+'?num='+(num+1)),\r\n            fetchById : id => axios.get(url+id),\r\n            create : (newRecord,num) => axios.post(url+\"?num=\"+num, newRecord),\r\n            update : (id, updateRecord) => axios.put(url+id, updateRecord),\r\n            delete : id => axios.delete(url+id)\r\n        }\r\n    },\r\n    DayTotal(){\r\n        return {\r\n            fetchDate : num => axios.get(baseUrl + 'dayTotals/' + '?date=' + num)\r\n        }\r\n    }\r\n}","import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    CREATE : 'CREATE',\r\n    UPDATE : 'UPDATE',\r\n    DELETE : 'DELETE',\r\n    FETCH_ALL : 'FETCH_ALL'\r\n    //FETCH_DATE : 'FETCH_DATE'\r\n}\r\n\r\nconst formatData = data => ({\r\n    ...data,\r\n    // Change these into integers\r\n    servings : parseInt( data.servings ? data.servings : 1 ),\r\n    fats : parseInt( data.fats ? data.fats : 0 ),\r\n    carbs : parseInt( data.carbs ? data.carbs : 0 ),\r\n    protein : parseInt( data.protein ? data.protein : 0 )\r\n})\r\n\r\n\r\n\r\nexport const fetchAll = (num) => dispatch =>\r\n{\r\n    // #3 Get the URL, perform action (get, post)\r\n    api.Food().fetchAll(num)\r\n    .then(response => {\r\n        // #4 Send this to the reducer\r\n            dispatch({\r\n                type : ACTION_TYPES.FETCH_ALL,\r\n                payload : response.data\r\n            })\r\n        }\r\n    )\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const create = (data, onSuccess, num) => dispatch =>{\r\n    data = formatData(data)\r\n    console.log(\"create\", data)\r\n    api.Food().create(data,num)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.CREATE,\r\n            payload:res.data\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const update = (foodID, data, onSuccess) => dispatch =>{\r\n    data = formatData(data)\r\n    console.log('edit',data)\r\n    api.Food().update(foodID, data)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.UPDATE,\r\n            //Add the id to send with data (id:id == id)\r\n            payload: {foodID,...data}\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const Delete = (foodID, onSuccess) => dispatch =>{\r\n    api.Food().delete(foodID)\r\n    .then(res =>{\r\n        dispatch({\r\n            type:ACTION_TYPES.DELETE,\r\n            //Add the id to send with data (id:id == id)\r\n            payload: foodID\r\n        })\r\n        onSuccess()\r\n    })\r\n    .catch(err => console.log(err))\r\n}","import { ACTION_TYPES } from \"../actions/Food\";\r\n\r\nconst initialState = {\r\n    list:[]\r\n}\r\n\r\n\r\nexport const Food = (state=initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            // #5 Store the data we got from the action into the list\r\n            return {\r\n                //...state,\r\n                list:[...action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list : [...state.list, action.payload]\r\n            }\r\n\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list : state.list.map(x => x.foodID == action.payload.foodID ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list : state.list.filter(x => x.foodID != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import api from \"./api\";\r\n\r\nexport const ACTION_TYPES = {\r\n    FETCH_DATE : 'FETCH_DATE'\r\n}\r\n\r\nexport const fetchDate = (num) => dispatch =>\r\n{\r\n    // #3 Get the URL, perform action (get, post)\r\n    api.DayTotal().fetchDate(num)\r\n    .then(response => {\r\n        // #4 Send this to the reducer\r\n            console.log('hey',response)\r\n            dispatch({\r\n                type : ACTION_TYPES.FETCH_DATE,\r\n                payload : response.data\r\n            })\r\n        }\r\n    )\r\n    .catch(err => console.log(err))\r\n}","import { ACTION_TYPES } from \"../actions/DayTotal\";\r\n\r\nconst iniitalState = {\r\n    list:[]\r\n}\r\n\r\nexport const DayTotal = (state=iniitalState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_DATE:\r\n            // #5 Store the data we got from the action into the list\r\n            return {\r\n                //...state,\r\n                list:[...action.payload] \r\n            }\r\n        \r\n        default:\r\n            return state\r\n        }   \r\n}","import { combineReducers } from \"redux\";\r\nimport { Food } from \"./Food\";\r\nimport { DayTotal } from \"./DayTotal\";\r\n\r\nexport const reducers = combineReducers({\r\n    Food,\r\n    DayTotal\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"../reducers\";\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    compose(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React, { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, validate, setCurrentId) => {\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        const fieldValue = {[name]: value}\r\n        //const fieldValue = { [name]: value }\r\n        setValues({\r\n            ...values,\r\n            ...fieldValue\r\n        })\r\n        validate(fieldValue)\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setValues({\r\n            ...initialFieldValues\r\n        })\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    };\r\n}\r\n\r\nexport default useForm;\r\n","import React,{useState,useEffect} from \"react\";\r\nimport { Grid, TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Food\";\r\nimport * as actions2 from \"../actions/DayTotal\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            minWidth: 230,\r\n        },\r\n        formControl: {\r\n            margin: theme.spacing(10),\r\n            minWidth: 230,\r\n        },\r\n        smMargin: {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n})\r\n\r\nconst initialFieldValues ={\r\n    name: '',\r\n    servings: '',\r\n    fats: '',\r\n    carbs: '' ,\r\n    protein: ''\r\n}\r\n\r\n\r\n\r\nconst FoodForm = ({classes, ...props}) => {\r\n\r\n    var num = props.num\r\n    \r\n    const { addToast } = useToasts()\r\n\r\n    function buttonWait() {\r\n        props.fetchDate(num)\r\n      }\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp={...errors}\r\n        if ('name' in fieldValues)\r\n            temp.name = fieldValues.name ? \"\" : \"This field is required.\"\r\n        if ('fats' in fieldValues)\r\n            temp.fats = (fieldValues.fats >= 0) ? \"\" : \"This field must be a positive number\"\r\n        if ('carbs' in fieldValues)\r\n            temp.carbs = (fieldValues.carbs >= 0) ? \"\" : \"This field must be a positive number\"\r\n        if ('protein' in fieldValues)\r\n            temp.protein = (fieldValues.protein >= 0) ? \"\" : \"This field must be a positive number\"    \r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x==\"\")\r\n    }\r\n\r\n    const {\r\n        values, \r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } =useForm(initialFieldValues,validate, props.setCurrentId)\r\n\r\n    const result = (parseInt( values.fats ? values.fats : 0)*9 + \r\n                   parseInt( values.carbs ? values.carbs : 0)*4 +\r\n                   parseInt( values.protein ? values.protein : 0)*4)*\r\n                   parseInt( values.servings ? values.servings : 1)\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault()\r\n        if(validate()){\r\n            const onSuccess = () => {\r\n                resetForm()\r\n                addToast(\"Submitted Successfully!\", {appearance:'success'})\r\n                \r\n            }\r\n            if(props.currentId==0) {\r\n                props.createFood(values, onSuccess, num)\r\n                setTimeout(buttonWait, 2000)\r\n            }\r\n            else\r\n                props.updateFood(props.currentId, values, onSuccess)\r\n                setTimeout(buttonWait, 1000)\r\n                \r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(props.currentId != 0)\r\n            setValues({\r\n                ...props.FoodList.find(x => x.foodID == props.currentId)\r\n            })\r\n            setErrors({})\r\n    },[props.currentId])\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={classes} onSubmit={handleSubmit}>\r\n            <Grid container className = \"\">\r\n                <Grid item className = \"width-full\">\r\n                    <div className = \"margin-center\">\r\n                    <TextField \r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    label=\"Name\"\r\n                    value={values.name}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-full\"\r\n                    //error={true}\r\n                    //helperText={errors.name}\r\n                    {...(errors.name && {error:true, helperText:errors.name})}\r\n                    />\r\n                    <TextField \r\n                    name=\"servings\"\r\n                    variant=\"outlined\"\r\n                    label=\"Servings\"\r\n                    value={values.servings}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-full\"\r\n                    //error={true}\r\n                    //helperText={errors.name}\r\n                    //{...(errors.name && {error:true, helperText:errors.name})}\r\n                    />\r\n                    </div>\r\n                    <div className=\"margin-center\">\r\n                    <TextField \r\n                    name=\"fats\"\r\n                    variant=\"outlined\"\r\n                    label=\"Fats\"\r\n                    value={values.fats}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.fats && {error:true, helperText:errors.fats})}\r\n                    />\r\n                    <TextField \r\n                    name=\"carbs\"\r\n                    variant=\"outlined\"\r\n                    label=\"Carbs\"\r\n                    value={values.carbs}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.carbs && {error:true, helperText:errors.carbs})}\r\n                    />\r\n                    <TextField \r\n                    name=\"protein\"\r\n                    variant=\"outlined\"\r\n                    label=\"Protein\"\r\n                    value={values.protein}\r\n                    onChange={handleInputChange}\r\n                    className = \"width-third\"\r\n                    {...(errors.protein && {error:true, helperText:errors.protein})}\r\n                    />\r\n                    </div>\r\n                    <div className = \"centerText\">\r\n                        Calories (estimate): {result}\r\n                    </div>\r\n                    <br></br>\r\n                    <div className=\"vertical-pad\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className='float-left width-half green vertical-pad'\r\n                        >\r\n                                Submit\r\n                        </Button>\r\n                        <Button\r\n                            className='float-right width-half grey vertical-pad'\r\n                            variant=\"contained\"\r\n                            onClick={resetForm}\r\n                        >\r\n                                Reset\r\n                        </Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    FoodList : state.Food.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    // #2\r\n    createFood : actions.create,\r\n    updateFood : actions.update,\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(FoodForm));","import React,{useState,useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {Line} from 'react-chartjs-2';\r\nimport * as actions2 from \"../actions/DayTotal\";\r\n\r\nvar arr = []\r\nvar arr2 = []\r\nvar arr3 = []\r\nvar dates = []\r\n\r\nvar test = (data) => {\r\n    arr = []\r\n    for (var item in data) {\r\n            arr.unshift(data[item].totalFats);\r\n    }\r\n    console.log('data',data)\r\n    return arr;\r\n}\r\n\r\nvar test2 = (data) => {\r\n    arr2 = []\r\n    for (var item in data) {\r\n            arr2.unshift(data[item].totalCarbs);\r\n    }\r\n    return arr2;\r\n}\r\n\r\nvar test3 = (data) => {\r\n  arr3 = []\r\n  for (var item in data) {\r\n          arr3.unshift(data[item].totalProtein);\r\n  }\r\n  return arr3;\r\n}\r\n\r\nvar datef = (data) => {\r\n    dates = []\r\n    for (var item in data) {\r\n        //console.log(data)\r\n        dates.unshift(data[(item)].date);\r\n    }\r\n    \r\n    return dates;\r\n}\r\n\r\nconst FoodChart = ({classes, ...props}) => {\r\n      return (\r\n        arr = test(props.DayTotal),\r\n        arr2 = test2(props.DayTotal),\r\n        arr3 = test3(props.DayTotal),\r\n        dates = datef(props.DayTotal),\r\n        console.log('dates', dates),\r\n        <div>\r\n          <Line\r\n            data={{labels: dates,\r\n                datasets: [\r\n                    {\r\n                        label: 'Fats',\r\n                        fill: false,\r\n                        lineTension: 0,\r\n                        backgroundColor: 'rgba(154, 223, 65,1)',\r\n                        borderColor: 'rgba(154, 223, 65,1)',\r\n                        borderWidth: 2,\r\n                        data: arr\r\n                    },\r\n                    {\r\n                        label: 'Carbs',\r\n                        fill: false,\r\n                        lineTension: 0,\r\n                        backgroundColor: 'rgba(233, 163, 58,1)',\r\n                        borderColor: 'rgba(233, 163, 58,1)',\r\n                        borderWidth: 2,\r\n                        data: arr2\r\n                    },\r\n                    {\r\n                      label: 'Protein',\r\n                      fill: false,\r\n                      lineTension: 0,\r\n                      backgroundColor: 'rgba(50, 219, 197,1)',\r\n                      borderColor: 'rgba(50, 219, 197,1)',\r\n                      borderWidth: 2,\r\n                      data: arr3\r\n                  }\r\n                ]\r\n            }}\r\n            options={{\r\n              title:{\r\n                display:true,\r\n                text:'Macronutrient Data in Last 7 Days',\r\n                fontSize:20\r\n              },\r\n              legend:{\r\n                display:true,\r\n                position:'right'\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    DayTotal : state.DayTotal.list\r\n})\r\n\r\nconst mapActionToProps ={\r\n    // #2\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(FoodChart, test);","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/Food\";\r\nimport * as actions2 from \"../actions/DayTotal\";\r\nimport { Grid, Paper, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, withStyles, ButtonGroup, Button } from \"@material-ui/core\";\r\nimport FoodForm from \"./FoodForm\";\r\nimport FoodChart from \"./FoodChart\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { getDefaultFormatCodeSettings } from \"typescript\";\r\nimport { getCurrentDate } from '../utils/getCurrentDate';\r\n\r\n// fetchAllFoods => Action => API => Reducer => back here\r\n\r\nconst styles = theme =>({\r\n    root:{\r\n        \"& .MuiTableCell-head\":{\r\n            fontSize:\"1.25rem\"\r\n        }\r\n    },\r\n    paper : {\r\n        margin: theme.spacing(2),\r\n        padding: theme.spacing(2)\r\n    }\r\n})\r\n// var date = Date(Date.now()).split('T')[0];\r\n\r\nvar num = 0\r\nvar boo = false\r\nfunction buttonWait() {\r\n    boo = false\r\n  }\r\n\r\nvar usaTime = new Date().toLocaleString(\"en-US\", {timeZone: \"America/New_York\"});\r\nconst date = new Date(usaTime);\r\nconst year = date.getFullYear();\r\nconst month = date.getMonth();\r\nconst day = date.getDate();\r\n\r\nfunction theDayf (num) {\r\n    var f = new Date(year, month, day  + num) // PLUS 1 DAY\r\n    return f;\r\n}\r\n\r\nvar theDay = theDayf(num).toDateString()\r\n\r\nconst Foods = ({classes,...props}) => {\r\n    const [currentId,setCurrentId] = useState(0)\r\n    \r\n    useEffect(()=>{\r\n        // #1\r\n        props.fetchAllFoods(num)\r\n        props.fetchDate(num)\r\n        \r\n    },[])//componentDidMount \r\n    \r\n    const { addToast } = useToasts()\r\n\r\n    const onFetchAdd = () => {\r\n        if (!boo) {\r\n            boo = true\r\n            num += 1\r\n            theDay = theDayf(num).toDateString()\r\n            props.fetchAllFoods(num)\r\n            props.fetchDate(num)\r\n        }\r\n        setTimeout(buttonWait, 250)\r\n    }\r\n    const onFetchSubtract = () => {\r\n        if (!boo) {\r\n            boo = true\r\n            num -= 1\r\n            theDay = theDayf(num).toDateString()\r\n            props.fetchAllFoods(num)\r\n            props.fetchDate(num)\r\n        }\r\n        setTimeout(buttonWait, 250)\r\n    }\r\n\r\n    const onDelete = foodID => {\r\n        if(window.confirm('Are you sure you want to delete this?'))\r\n            props.deleteFood(foodID, () => addToast(\"Deleted Successfully!\", {appearance:'info'}))\r\n    }\r\n\r\n    const result = (record) => {\r\n        return(\r\n            (parseInt( record.fats ? record.fats : 0)*9 + \r\n            parseInt( record.carbs ? record.carbs : 0)*4 +\r\n            parseInt( record.protein ? record.protein : 0)*4)*\r\n            parseInt(record.servings ? record.servings : 1)\r\n        )\r\n    }\r\n\r\n    \r\n    return (\r\n    <Paper className={classes.paper} elevation={5}>\r\n        \r\n        <div className=\"margin-tenth\">\r\n            <Button\r\n                variant=\"contained\"\r\n                className='float-left width-fourth blue'\r\n                onClick={onFetchSubtract}\r\n            >\r\n               {\"<=\"} Prev\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                className='float-right width-fourth blue'\r\n                onClick={onFetchAdd}\r\n            >\r\n                Next {\"=>\"}\r\n            </Button>\r\n        </div>\r\n        <div className = \"centerText font24 bold\">{theDay}</div>\r\n        <br /> <br />\r\n        <FoodChart />\r\n        <br /><br /><br />\r\n        <FoodForm {...({currentId,setCurrentId,num})}/>\r\n        <br /><br /><br />\r\n\r\n        <Grid container>\r\n            <Grid item className = \"width-full\">\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead className={classes.root}>\r\n                            <TableRow>\r\n                                <TableCell>Name (Servings)</TableCell>\r\n                                <TableCell>Fats</TableCell>\r\n                                <TableCell>Carbs</TableCell>\r\n                                <TableCell>Protein</TableCell>\r\n                                <TableCell>Calories</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                // #7 the list is ouput to the page\r\n                                props.FoodList.map((record,index)=>{\r\n                                    return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.name} ({record.servings})</TableCell>\r\n                                            <TableCell>{record.fats * record.servings}</TableCell>\r\n                                            <TableCell>{record.carbs * record.servings}</TableCell>\r\n                                            <TableCell>{record.protein * record.servings}</TableCell>\r\n                                            <TableCell>{result(record)}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Button><EditIcon color=\"primary\"\r\n                                                    onClick={() => { setCurrentId(record.foodID) }}/></Button>\r\n                                                    <Button><DeleteIcon color=\"secondary\"\r\n                                                    onClick={() => onDelete(record.foodID) }/></Button>\r\n                                                </ButtonGroup> \r\n                                            </TableCell>\r\n                                        </TableRow>)  \r\n                                })\r\n                            }\r\n                            </TableBody>\r\n                    </Table>\r\n                    \r\n                    \r\n                    {/* <Table>\r\n                        <TableHead className={classes.root}>\r\n                            <TableRow>\r\n                                <TableCell>Total Fats</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                // #7 the list is ouput to the page\r\n                                props.DayTotal.map((record,index)=>{\r\n                                    return (<TableRow key={index} hover>\r\n                                            <TableCell>{record.totalFats}</TableCell>\r\n                                        </TableRow>)\r\n                                })\r\n                            }\r\n                            </TableBody>\r\n                        </Table> */}\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>\r\n        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    // #6 This list is then retrieved from the reducer\r\n    FoodList : state.Food.list,\r\n    DayTotal : state.DayTotal.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    // #2\r\n    fetchAllFoods : actions.fetchAll,\r\n    deleteFood : actions.Delete,\r\n    fetchDate : actions2.fetchDate\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(Foods));","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { store } from \"./actions/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport './custom.css'\r\nimport Foods from './components/Foods';\r\nimport { Container } from \"@material-ui/core\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\n\r\n\r\n/*\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n        <Route path='/counter' component={Counter} />\r\n        <Route path='/fetch-data' component={FetchData} />\r\n      </Layout>\r\n    );\r\n  }\r\n}*/\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ToastProvider autoDismiss={true}>\r\n        <Container maxWidth=\"lg\">\r\n          <Foods />\r\n        </Container>\r\n      </ToastProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route } from 'react-router';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n        <Route path=\"/app/\" component={App} />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\n//registerServiceWorker();\r\n\r\n"],"sourceRoot":""}